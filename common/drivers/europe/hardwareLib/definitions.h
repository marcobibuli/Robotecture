/*=========================================================================*\
||                                                                         ||
||                  Code written by: Gabriele Bruzzone                     ||
||                                                                         ||
\*=========================================================================*/

// Release 1.0, 25/03/2016

//---------------------------------------------------------------------------
//
// definitions.h
//
//---------------------------------------------------------------------------

#ifndef DEFINITIONS_H
#define DEFINITIONS_H

#include <inttypes.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


#ifdef __MAIN__
#define PRE
#else
#define PRE extern
#endif // __MAIN__

	PRE char _debugString[256];
	PRE int endLoop;

#define HCI_TO_EUROPE_UDP_PORT (2968)
#define EUROPE_TO_HCI_UDP_PORT (2969)

#define EUROPE_DIO_MAX_CHANNELS (48)
#define EUROPE_AD_MAX_CHANNELS  (32)
#define EUROPE_DA_MAX_CHANNELS   (8)

#define EUROPE_DIO_MAX_INT32 ((EUROPE_DIO_MAX_CHANNELS-1)/32+1)

typedef struct
   {
   uint32_t dateAndTime;
   uint32_t timeMs;
   int controlMode;
   int depthAltitudeMode;
   double depth;
   double conductivity;
   double externalTemperature;
   double altitude;
   double surge;
   double sway;
   double horizontalMotorVoltageRef[4];
   double verticalMotorVoltageRef[4];
   double yawRef;
   double depthRef;
   double altitudeRef;
   double surgeRef;
   double swayRef;
   double xAccel;
   double yAccel;
   double zAccel;
   double xGyro;
   double yGyro;
   double zGyro;
   double xMag;
   double yMag;
   double zMag;
   double orientationMatrix[3][3];
   double yaw;
   double pitch;
   double roll;
   double latitude;
   double longitude;
   double heightAboveEllipsode;
   double heightAboveMSL;
   double horizontalAccuracy;
   double verticalAccuracy;
   uint16_t llhPositionValidFlags;
   double north;
   double east;
   double down;
   double speed;
   double groundSpeed;
   double heading;
   double speedAccuracy;
   double headingAccuracy;
   uint16_t nedVelocityValidFlags;
   }VehicleStatus;

typedef enum
   {
   DEBUG_MANUAL_COMMAND_OPCODE_UINT16_OFFSET       =0,
   DEBUG_MANUAL_COMMAND_PARAMETER_0_UINT16_OFFSET  =1,
   DEBUG_MANUAL_COMMAND_PARAMETER_1_UINT16_OFFSET  =2,
   DEBUG_MANUAL_COMMAND_PARAMETER_2_UINT16_OFFSET  =3,
   DEBUG_MANUAL_COMMAND_PARAMETER_3_UINT16_OFFSET  =4,
   DEBUG_MANUAL_COMMAND_SIZE_IN_UINT16
   }DebugManualCommandOffsetEnum;

typedef enum
   {
   DEBUG_MANUAL_COMMAND_SET_DIGITAL_CHANNEL_OPCODE            =0x8000,
   DEBUG_MANUAL_COMMAND_SET_DIGITAL_PULSE_CHANNEL_OPCODE      =0x8000+ 1,
   DEBUG_MANUAL_COMMAND_SET_ANALOG_CHANNEL_OPCODE             =0x8000+ 2,
   DEBUG_MANUAL_COMMAND_STOP_OPCODE                           =0x8000+ 3,
   DEBUG_MANUAL_COMMAND_SET_HORIZONTAL_THRUSTERS_SPEED_OPCODE =0x8000+ 4,
   DEBUG_MANUAL_COMMAND_SET_VERTICAL_THRUSTERS_SPEED_OPCODE   =0x8000+ 5,
   DEBUG_MANUAL_COMMAND_SET_YAW_REF_OPCODE                    =0x8000+ 6,
   DEBUG_MANUAL_COMMAND_SET_SURGE_REF_OPCODE                  =0x8000+ 7,
   DEBUG_MANUAL_COMMAND_SET_SWAY_REF_OPCODE                   =0x8000+ 8,
   DEBUG_MANUAL_COMMAND_SET_DEPTH_REF_OPCODE                  =0x8000+ 9,
   DEBUG_MANUAL_COMMAND_SET_ALTITUDE_REF_OPCODE               =0x8000+10,
   DEBUG_MANUAL_COMMAND_SET_CONTROL_MODE_OPCODE               =0x8000+11,
   DEBUG_MANUAL_COMMAND_SET_DEPTH_ALTITUDE_MODE_OPCODE        =0x8000+12
   }DebugManualCommandOpCodeEnum;

typedef enum
   {
   DEBUG_MANUAL_TELEMETRY_DATE_AND_TIME_LSW_UINT16_OFFSET    = 0,
   DEBUG_MANUAL_TELEMETRY_DATE_AND_TIME_MSW_UINT16_OFFSET    = 1,

   DEBUG_MANUAL_TELEMETRY_TIME_MS_LSW_UINT16_OFFSET          = 2,
   DEBUG_MANUAL_TELEMETRY_TIME_MS_MSW_UINT16_OFFSET          = 3,

   DEBUG_MANUAL_TELEMETRY_DIGITAL_IO_WORD_0_UINT16_OFFSET    = 4, // bits [0..15]
   DEBUG_MANUAL_TELEMETRY_DIGITAL_IO_WORD_1_UINT16_OFFSET    = 5, // bits [16..31]
   DEBUG_MANUAL_TELEMETRY_DIGITAL_IO_WORD_2_UINT16_OFFSET    = 6, // bits [32..48]

   DEBUG_MANUAL_TELEMETRY_MOTOR_0_VREF_UINT16_OFFSET         = 7, // *1000.0 [V] AO-00-B0-V00 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_1_VREF_UINT16_OFFSET         = 8, // *1000.0 [V] AO-01-B0-V01 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_2_VREF_UINT16_OFFSET         = 9, // *1000.0 [V] AO-02-B0-V02 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_3_VREF_UINT16_OFFSET         =10, // *1000.0 [V] AO-03-B0-V03 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_4_VREF_UINT16_OFFSET         =11, // *1000.0 [V] AO-04-B1-V00 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_5_VREF_UINT16_OFFSET         =12, // *1000.0 [V] AO-05-B1-V01 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_6_VREF_UINT16_OFFSET         =13, // *1000.0 [V] AO-06-B1-V02 - OUTPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_7_VREF_UINT16_OFFSET         =14, // *1000.0 [V] AO-07-B1-V03 - OUTPUT

   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_00_UINT16_OFFSET      =15, // *1000.0 [V] AI-00-B0-V00 - INPUT
   DEBUG_MANUAL_TELEMETRY_INPUT_CURRENT_UINT16_OFFSET        =16, // *1000.0 [A] AI-01-B0-V01 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_02_UINT16_OFFSET      =17, // *1000.0 [C] AI-02-B0-V02 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_0_CURRENT_UINT16_OFFSET      =18, // *1000.0 [A] AI-03-B0-V03 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_1_CURRENT_UINT16_OFFSET      =19, // *1000.0 [A] AI-04-B0-V04 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_2_CURRENT_UINT16_OFFSET      =20, // *1000.0 [A] AI-05-B0-V05 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_3_CURRENT_UINT16_OFFSET      =21, // *1000.0 [A] AI-06-B0-V06 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_4_CURRENT_UINT16_OFFSET      =22, // *1000.0 [A] AI-07-B0-V07 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_5_CURRENT_UINT16_OFFSET      =23, // *1000.0 [A] AI-08-B0-V08 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_6_CURRENT_UINT16_OFFSET      =24, // *1000.0 [A] AI-09-B0-V09 - INPUT
   DEBUG_MANUAL_TELEMETRY_MOTOR_7_CURRENT_UINT16_OFFSET      =25, // *1000.0 [A] AI-10-B0-V10 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_11_UINT16_OFFSET      =26, // *1000.0 [V] AI-11-B0-V11 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_12_UINT16_OFFSET      =27, // *1000.0 [V] AI-12-B0-V12 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_13_UINT16_OFFSET      =28, // *1000.0 [V] AI-13-B0-V13 - INPUT
   DEBUG_MANUAL_TELEMETRY_INTERNAL_TEMPERATURE_UINT16_OFFSET =29, // *1000.0 [V] AI-14-B0-V14 - INPUT
   DEBUG_MANUAL_TELEMETRY_INPUT_VOLTAGE_UINT16_OFFSET        =30, // *1000.0 [V] AI-15-B0-V15 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_16_UINT16_OFFSET      =31, // *1000.0 [V] AI-16-B1-V00 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_17_UINT16_OFFSET      =32, // *1000.0 [V] AI-17-B1-V01 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_18_UINT16_OFFSET      =33, // *1000.0 [V] AI-18-B1-V02 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_19_UINT16_OFFSET      =34, // *1000.0 [V] AI-19-B1-V03 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_20_UINT16_OFFSET      =35, // *1000.0 [V] AI-20-B1-V04 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_21_UINT16_OFFSET      =36, // *1000.0 [V] AI-21-B1-V05 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_22_UINT16_OFFSET      =37, // *1000.0 [V] AI-22-B1-V06 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_23_UINT16_OFFSET      =38, // *1000.0 [V] AI-23-B1-V07 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_24_UINT16_OFFSET      =39, // *1000.0 [V] AI-24-B1-V08 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_25_UINT16_OFFSET      =40, // *1000.0 [V] AI-25-B1-V09 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_26_UINT16_OFFSET      =41, // *1000.0 [V] AI-26-B1-V10 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_27_UINT16_OFFSET      =42, // *1000.0 [V] AI-27-B1-V11 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_28_UINT16_OFFSET      =43, // *1000.0 [V] AI-28-B1-V12 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_29_UINT16_OFFSET      =44, // *1000.0 [V] AI-29-B1-V13 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_30_UINT16_OFFSET      =45, // *1000.0 [V] AI-30-B1-V14 - INPUT
   DEBUG_MANUAL_TELEMETRY_ANALOG_INPUT_31_UINT16_OFFSET      =46, // *1000.0 [V] AI-31-B1-V15 - INPUT

   DEBUG_MANUAL_TELEMETRY_YAW_UINT16_OFFSET                  =47, // *100.0 [deg]
   DEBUG_MANUAL_TELEMETRY_PITCH_UINT16_OFFSET                =48, // *100.0 [deg]
   DEBUG_MANUAL_TELEMETRY_ROLL_UINT16_OFFSET                 =49, // *100.0 [deg]
   DEBUG_MANUAL_TELEMETRY_DEPTH_LSW_UINT16_OFFSET            =50, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_DEPTH_MSW_UINT16_OFFSET            =51, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_CONDUCTIVITY_LSW_UINT16_OFFSET     =52, // *100000.0 [mS/cm]
   DEBUG_MANUAL_TELEMETRY_CONDUCTIVITY_MSW_UINT16_OFFSET     =53, // *100000.0 [mS/cm]
   DEBUG_MANUAL_TELEMETRY_EXTERNAL_TEMPERATURE_UINT16_OFFSET =54, // *1000.0 [C]
   DEBUG_MANUAL_TELEMETRY_ALTITUDE_UINT16_OFFSET             =55, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_SURGE_UINT16_OFFSET                =56, // *1000.0 [m/s]
   DEBUG_MANUAL_TELEMETRY_SWAY_UINT16_OFFSET                 =57, // *1000.0 [m/s]
   DEBUG_MANUAL_TELEMETRY_YAW_REFERENCE_UINT16_OFFSET        =58, // *100.0 [deg]
   DEBUG_MANUAL_TELEMETRY_DEPTH_REFERENCE_LSW_UINT16_OFFSET  =59, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_DEPTH_REFERENCE_MSW_UINT16_OFFSET  =60, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_ALTITUDE_REFERENCE_UINT16_OFFSET   =61, // *1000.0 [m]
   DEBUG_MANUAL_TELEMETRY_SURGE_REFERENCE_UINT16_OFFSET      =62, // *1000.0 [m/s]
   DEBUG_MANUAL_TELEMETRY_SWAY_REFERENCE_UINT16_OFFSET       =63, // *1000.0 [m/s]
   DEBUG_MANUAL_TELEMETRY_STATUS_UINT16_OFFSET               =64,

   DEBUG_MANUAL_TELEMETRY_SIZE_IN_UINT16
   }DebugManualTelemetryOffsetEnum;

typedef enum
   {
   EUROPE_DIO_MOTOR_0_POWER           =  0, // DIO-00-B0-A0 - OUTPUT
   EUROPE_DIO_MOTOR_1_POWER           =  1, // DIO-01-B0-A1 - OUTPUT
   EUROPE_DIO_MOTOR_2_POWER           =  2, // DIO-02-B0-A2 - OUTPUT
   EUROPE_DIO_MOTOR_3_POWER           =  3, // DIO-03-B0-A3 - OUTPUT
   EUROPE_DIO_MOTOR_4_POWER           =  4, // DIO-04-B0-A4 - OUTPUT
   EUROPE_DIO_MOTOR_5_POWER           =  5, // DIO-05-B0-A5 - OUTPUT
   EUROPE_DIO_MOTOR_6_POWER           =  6, // DIO-06-B0-A6 - OUTPUT
   EUROPE_DIO_MOTOR_7_POWER           =  7, // DIO-07-B0-A7 - OUTPUT
   EUROPE_DIO_MOTOR_0_ENABLE          =  8, // DIO-08-B0-B0 - OUTPUT
   EUROPE_DIO_MOTOR_1_ENABLE          =  9, // DIO-08-B0-B1 - OUTPUT
   EUROPE_DIO_MOTOR_2_ENABLE          = 10, // DIO-10-B0-B2 - OUTPUT
   EUROPE_DIO_MOTOR_3_ENABLE          = 11, // DIO-11-B0-B3 - OUTPUT
   EUROPE_DIO_MOTOR_4_ENABLE          = 12, // DIO-12-B0-B4 - OUTPUT
   EUROPE_DIO_MOTOR_5_ENABLE          = 13, // DIO-13-B0-B5 - OUTPUT
   EUROPE_DIO_MOTOR_6_ENABLE          = 14, // DIO-14-B0-B6 - OUTPUT
   EUROPE_DIO_MOTOR_7_ENABLE          = 15, // DIO-15-B0-B7 - OUTPUT
   EUROPE_DIO_LIGHTS_UP_POWER         = 16, // DIO-16-B0-C0 - OUTPUT
   EUROPE_DIO_LIGHTS_MIDDLE_POWER     = 17, // DIO-17-B0-C1 - OUTPUT
   EUROPE_DIO_LIGHTS_DOWN_POWER       = 18, // DIO-18-B0-C2 - OUTPUT
   EUROPE_DIO_PA500_1_POWER           = 19, // DIO-19-B0-C3 - OUTPUT
   EUROPE_DIO_PA500_2_POWER           = 20, // DIO-20-B0-C4 - OUTPUT
   EUROPE_DIO_FIBER_OPTIC_GYRO_POWER  = 21, // DIO-21-B0-C5 - OUTPUT
   EUROPE_DIO_EVOLOGICS_MODEM_POWER   = 22, // DIO-22-B0-C6 - OUTPUT
   EUROPE_DIO_DVL_POWER               = 23, // DIO-23-B0-C7 - OUTPUT
   EUROPE_DIO_NEWCASTLE_MODEM_POWER   = 24, // DIO-24-B1-A0 - OUTPUT
   EUROPE_DIO_CPU_2_POWER             = 25, // DIO-25-B1-A1 - OUTPUT
   EUROPE_DIO_POE_POWER               = 26, // DIO-26-B1-A2 - OUTPUT
   EUROPE_DIO_AVAILABLE_27            = 27, // DIO-27-B1-A3 - OUTPUT
   EUROPE_DIO_AVAILABLE_28            = 28, // DIO-28-B1-A4 - OUTPUT
   EUROPE_DIO_AVAILABLE_29            = 29, // DIO-29-B1-A5 - OUTPUT
   EUROPE_DIO_AVAILABLE_30            = 30, // DIO-30-B1-A6 - OUTPUT
   EUROPE_DIO_AVAILABLE_31            = 31, // DIO-31-B1-A7 - OUTPUT
   EUROPE_DIO_MOTOR_0_FAULT           = 32, // DIO-32-B1-B0 - INPUT
   EUROPE_DIO_MOTOR_1_FAULT           = 33, // DIO-33-B1-B1 - INPUT
   EUROPE_DIO_MOTOR_2_FAULT           = 34, // DIO-34-B1-B2 - INPUT
   EUROPE_DIO_MOTOR_3_FAULT           = 35, // DIO-35-B1-B3 - INPUT
   EUROPE_DIO_MOTOR_4_FAULT           = 36, // DIO-36-B1-B4 - INPUT
   EUROPE_DIO_MOTOR_5_FAULT           = 37, // DIO-37-B1-B5 - INPUT
   EUROPE_DIO_MOTOR_6_FAULT           = 38, // DIO-38-B1-B6 - INPUT
   EUROPE_DIO_MOTOR_7_FAULT           = 39, // DIO-39-B1-B7 - INPUT
   EUROPE_DIO_AVAILABLE_40            = 40, // DIO-40-B1-C0 - INPUT
   EUROPE_DIO_AVAILABLE_41            = 41, // DIO-41-B1-C1 - INPUT
   EUROPE_DIO_AVAILABLE_42            = 42, // DIO-42-B1-C2 - INPUT
   EUROPE_DIO_AVAILABLE_43            = 43, // DIO-43-B1-C3 - INPUT
   EUROPE_DIO_AVAILABLE_44            = 44, // DIO-44-B1-C4 - OUTPUT
   EUROPE_DIO_AVAILABLE_45            = 45, // DIO-45-B1-C5 - OUTPUT
   EUROPE_DIO_AVAILABLE_46            = 46, // DIO-46-B1-C6 - OUTPUT
   EUROPE_DIO_AVAILABLE_47            = 47  // DIO-47-B1-C7 - OUTPUT
   }EuropeDioEnum;


#define EUROPE_DIO_MOTOR_VFL_POWER (EUROPE_DIO_MOTOR_0_POWER)
#define EUROPE_DIO_MOTOR_VFR_POWER (EUROPE_DIO_MOTOR_1_POWER)
#define EUROPE_DIO_MOTOR_VRL_POWER (EUROPE_DIO_MOTOR_2_POWER)
#define EUROPE_DIO_MOTOR_VRR_POWER (EUROPE_DIO_MOTOR_3_POWER)

#define EUROPE_DIO_MOTOR_HFL_POWER (EUROPE_DIO_MOTOR_4_POWER)
#define EUROPE_DIO_MOTOR_HFR_POWER (EUROPE_DIO_MOTOR_5_POWER)
#define EUROPE_DIO_MOTOR_HRL_POWER (EUROPE_DIO_MOTOR_6_POWER)
#define EUROPE_DIO_MOTOR_HRR_POWER (EUROPE_DIO_MOTOR_7_POWER)

#define EUROPE_DIO_MOTOR_VFL_ENABLE (EUROPE_DIO_MOTOR_0_ENABLE)
#define EUROPE_DIO_MOTOR_VFR_ENABLE (EUROPE_DIO_MOTOR_1_ENABLE)
#define EUROPE_DIO_MOTOR_VRL_ENABLE (EUROPE_DIO_MOTOR_2_ENABLE)
#define EUROPE_DIO_MOTOR_VRR_ENABLE (EUROPE_DIO_MOTOR_3_ENABLE)

#define EUROPE_DIO_MOTOR_HFL_ENABLE (EUROPE_DIO_MOTOR_4_ENABLE)
#define EUROPE_DIO_MOTOR_HFR_ENABLE (EUROPE_DIO_MOTOR_5_ENABLE)
#define EUROPE_DIO_MOTOR_HRL_ENABLE (EUROPE_DIO_MOTOR_6_ENABLE)
#define EUROPE_DIO_MOTOR_HRR_ENABLE (EUROPE_DIO_MOTOR_7_ENABLE)

#define EUROPE_DIO_MOTOR_VFL_FAULT (EUROPE_DIO_MOTOR_0_FAULT)
#define EUROPE_DIO_MOTOR_VFR_FAULT (EUROPE_DIO_MOTOR_1_FAULT)
#define EUROPE_DIO_MOTOR_VRL_FAULT (EUROPE_DIO_MOTOR_2_FAULT)
#define EUROPE_DIO_MOTOR_VRR_FAULT (EUROPE_DIO_MOTOR_3_FAULT)

#define EUROPE_DIO_MOTOR_HFL_FAULT (EUROPE_DIO_MOTOR_4_FAULT)
#define EUROPE_DIO_MOTOR_HFR_FAULT (EUROPE_DIO_MOTOR_5_FAULT)
#define EUROPE_DIO_MOTOR_HRL_FAULT (EUROPE_DIO_MOTOR_6_FAULT)
#define EUROPE_DIO_MOTOR_HRR_FAULT (EUROPE_DIO_MOTOR_7_FAULT)


typedef enum
   {
   EUROPE_DA_MOTOR_0_VREF           =  0, // AO-00-B0-V00 - OUTPUT
   EUROPE_DA_MOTOR_1_VREF           =  1, // AO-01-B0-V01 - OUTPUT
   EUROPE_DA_MOTOR_2_VREF           =  2, // AO-02-B0-V02 - OUTPUT
   EUROPE_DA_MOTOR_3_VREF           =  3, // AO-03-B0-V03 - OUTPUT
   EUROPE_DA_MOTOR_4_VREF           =  4, // AO-04-B1-V00 - OUTPUT
   EUROPE_DA_MOTOR_5_VREF           =  5, // AO-05-B1-V01 - OUTPUT
   EUROPE_DA_MOTOR_6_VREF           =  6, // AO-06-B1-V02 - OUTPUT
   EUROPE_DA_MOTOR_7_VREF           =  7  // AO-07-B1-V03 - OUTPUT
   }EuropeDAEnum;

#define EUROPE_DA_MOTOR_VFL_VREF (EUROPE_DA_MOTOR_0_VREF)
#define EUROPE_DA_MOTOR_VFR_VREF (EUROPE_DA_MOTOR_1_VREF)
#define EUROPE_DA_MOTOR_VRL_VREF (EUROPE_DA_MOTOR_2_VREF)
#define EUROPE_DA_MOTOR_VRR_VREF (EUROPE_DA_MOTOR_3_VREF)

#define EUROPE_DA_MOTOR_HFL_VREF (EUROPE_DA_MOTOR_4_VREF)
#define EUROPE_DA_MOTOR_HFR_VREF (EUROPE_DA_MOTOR_5_VREF)
#define EUROPE_DA_MOTOR_HRL_VREF (EUROPE_DA_MOTOR_6_VREF)
#define EUROPE_DA_MOTOR_HRR_VREF (EUROPE_DA_MOTOR_7_VREF)


typedef enum
   {
   EUROPE_AD_AVAILABLE_00           =  0, // AI-00-B0-V00 - INPUT
   EUROPE_AD_INPUT_CURRENT          =  1, // AI-01-B0-V01 - INPUT
   EUROPE_AD_AVAILABLE_02           =  2, // AI-02-B0-V02 - INPUT
   EUROPE_AD_MOTOR_0_CURRENT        =  3, // AI-03-B0-V03 - INPUT
   EUROPE_AD_MOTOR_1_CURRENT        =  4, // AI-04-B0-V04 - INPUT
   EUROPE_AD_MOTOR_2_CURRENT        =  5, // AI-05-B0-V05 - INPUT
   EUROPE_AD_MOTOR_3_CURRENT        =  6, // AI-06-B0-V06 - INPUT
   EUROPE_AD_MOTOR_4_CURRENT        =  7, // AI-07-B0-V07 - INPUT
   EUROPE_AD_MOTOR_5_CURRENT        =  8, // AI-08-B0-V08 - INPUT
   EUROPE_AD_MOTOR_6_CURRENT        =  9, // AI-09-B0-V09 - INPUT
   EUROPE_AD_MOTOR_7_CURRENT        = 10, // AI-10-B0-V10 - INPUT
   EUROPE_AD_AVAILABLE_11           = 11, // AI-11-B0-V11 - INPUT
   EUROPE_AD_AVAILABLE_12           = 12, // AI-12-B0-V12 - INPUT
   EUROPE_AD_AVAILABLE_13           = 13, // AI-13-B0-V13 - INPUT
   EUROPE_AD_INTERNAL_TEMPERATURE   = 14, // AI-14-B0-V14 - INPUT
   EUROPE_AD_INPUT_VOLTAGE          = 15, // AI-15-B0-V15 - INPUT
   EUROPE_AD_AVAILABLE_16           = 16, // AI-16-B1-V00 - INPUT
   EUROPE_AD_AVAILABLE_17           = 17, // AI-17-B1-V01 - INPUT
   EUROPE_AD_AVAILABLE_18           = 18, // AI-18-B1-V02 - INPUT
   EUROPE_AD_AVAILABLE_19           = 19, // AI-19-B1-V03 - INPUT
   EUROPE_AD_AVAILABLE_20           = 20, // AI-20-B1-V04 - INPUT
   EUROPE_AD_AVAILABLE_21           = 21, // AI-21-B1-V05 - INPUT
   EUROPE_AD_AVAILABLE_22           = 22, // AI-22-B1-V06 - INPUT
   EUROPE_AD_AVAILABLE_23           = 23, // AI-23-B1-V07 - INPUT
   EUROPE_AD_AVAILABLE_24           = 24, // AI-24-B1-V08 - INPUT
   EUROPE_AD_AVAILABLE_25           = 25, // AI-25-B1-V09 - INPUT
   EUROPE_AD_AVAILABLE_26           = 26, // AI-26-B1-V10 - INPUT
   EUROPE_AD_AVAILABLE_27           = 27, // AI-27-B1-V11 - INPUT
   EUROPE_AD_AVAILABLE_28           = 28, // AI-28-B1-V12 - INPUT
   EUROPE_AD_AVAILABLE_29           = 29, // AI-29-B1-V13 - INPUT
   EUROPE_AD_AVAILABLE_30           = 30, // AI-30-B1-V14 - INPUT
   EUROPE_AD_AVAILABLE_31           = 31  // AI-31-B1-V15 - INPUT
   }EuropeADEnum;

#define EUROPE_AD_MOTOR_VFL_CURRENT (EUROPE_AD_MOTOR_0_CURRENT)
#define EUROPE_AD_MOTOR_VFR_CURRENT (EUROPE_AD_MOTOR_1_CURRENT)
#define EUROPE_AD_MOTOR_VRL_CURRENT (EUROPE_AD_MOTOR_2_CURRENT)
#define EUROPE_AD_MOTOR_VRR_CURRENT (EUROPE_AD_MOTOR_3_CURRENT)

#define EUROPE_AD_MOTOR_HFL_CURRENT (EUROPE_AD_MOTOR_4_CURRENT)
#define EUROPE_AD_MOTOR_HFR_CURRENT (EUROPE_AD_MOTOR_5_CURRENT)
#define EUROPE_AD_MOTOR_HRL_CURRENT (EUROPE_AD_MOTOR_6_CURRENT)
#define EUROPE_AD_MOTOR_HRR_CURRENT (EUROPE_AD_MOTOR_7_CURRENT)

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // DEFINITIONS_H
